"""
Django settings for public_service_finder project.

Generated by 'django-admin startproject' using Django 5.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import sys
from pathlib import Path
import os
from datetime import timedelta

from decouple import config

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


DEBUG = True
SECRET_KEY = config("DJANGO_SECRET_KEY")
GEOCODING_API_KEY = config("GEOCODING_API_KEY")
SUPABASE_DB_NAME = config("SUPABASE_DB_NAME")
SUPABASE_DB_USER = config("SUPABASE_DB_USER")
SUPABASE_DB_PASSWORD = config("SUPABASE_DB_PASSWORD")
SUPABASE_DB_HOST = config("SUPABASE_DB_HOST")
SUPABASE_DB_PORT = config("SUPABASE_DB_PORT")

AWS_REGION = "us-east-1"
DYNAMODB_TABLE_SERVICES = "services"
DYNAMODB_TABLE_REVIEWS = "reviews"

SITE_ID = 2  # Make sure this is set

ALLOWED_HOSTS = ["localhost", "127.0.0.1", ".elasticbeanstalk.com", "nycservicefinder.live"]
# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django.contrib.sites",  # Required for django-allauth
    "allauth",
    "allauth.account",
    "allauth.socialaccount",  # Ensure this is included
    "allauth.socialaccount.providers.google",  # For Google OAuth
    "home",
    "services",
    "accounts",
    "axes",
]


SOCIALACCOUNT_PROVIDERS = {
    "google": {"SCOPE": ["profile", "email"], "AUTH_PARAMS": {"access_type": "online"}}
}

SOCIALACCOUNT_LOGIN_ON_GET = True  # Skips the intermediate "Continue" page


AUTH_USER_MODEL = "accounts.CustomUser"
LOGIN_URL = "user_login"
LOGIN_REDIRECT_URL = "home"  # Redirect to the home page after login
LOGOUT_REDIRECT_URL = "user_login"  # Redirect to user login after logout


LANGUAGE_CODE = "en-us"
TIME_ZONE = "UTC"
USE_I18N = True
USE_TZ = True

# Static files (CSS, JavaScript, Images)
STATIC_URL = "static/"
STATICFILES_DIRS = [os.path.join(BASE_DIR, "static")]
# django-axes configurations
SESSION_ENGINE = "django.contrib.sessions.backends.db"  # Default setting
AXES_USERNAME_CALLABLE = "accounts.utils.get_axes_username"

AXES_ENABLED = True
AXES_FAILURE_LIMIT = 3
AXES_COOLOFF_TIME = timedelta(minutes=5)
AXES_LOCKOUT_PARAMETERS = ["username"]
AXES_RESET_ON_SUCCESS = False
AXES_HANDLER = "axes.handlers.database.AxesDatabaseHandler"
AXES_USERNAME_FORM_FIELD = "username"
AXES_LOCKOUT_TEMPLATE = "lockout.html"
AXES_LOCKOUT_URL = None
AXES_RAISE_PERMISSION_DENIED = True
AXES_LOG_USING_SESSIONS = True  # Updated to True
AXES_RAISE_ACCESS_EXCEPTIONS = False
AXES_RESET_COOL_OFF_ON_FAILURE = True
AXES_VERBOSE = True
AXES_USE_PROXY = False

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "allauth.account.middleware.AccountMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "axes.middleware.AxesMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "public_service_finder.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [
            os.path.join(BASE_DIR, "public_service_finder/templates")
        ],  # Updated to include 'templates' directory
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "public_service_finder.wsgi.application"


# db-prep
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases


DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": SUPABASE_DB_NAME,
        "USER": SUPABASE_DB_USER,
        "PASSWORD": SUPABASE_DB_PASSWORD,
        "HOST": SUPABASE_DB_HOST,
        "PORT": SUPABASE_DB_PORT,
    }
}

if "test" in sys.argv:
    DATABASES["default"] = {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "test_db.sqlite3",
    }

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/
# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

AUTHENTICATION_BACKENDS = (
    "django.contrib.auth.backends.ModelBackend",  # Default
    "allauth.account.auth_backends.AuthenticationBackend",  # For allauth
    "axes.backends.AxesStandaloneBackend",  # axes
)
